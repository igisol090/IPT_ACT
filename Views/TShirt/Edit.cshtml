@model OrderingSystem.Models.OrderedTShirt

<h2>Edit T-Shirt</h2>

<form asp-action="Edit" method="post">
    <input type="hidden" asp-for="Id" />

    <div class="form-group">
        <label asp-for="Product"></label>
        <input asp-for="Product" class="form-control" readonly />
        <span asp-validation-for="Product" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Quantity"></label>
        <div class="input-group">
            <button type="button" class="btn btn-thirtiary" id="decrementBtn">-</button>
            <input asp-for="Quantity" class="form-control text-center" id="quantityInput" readonly />
            <button type="button" class="btn btn-thirtiary" id="incrementBtn">+</button>
        </div>
        <span asp-validation-for="Quantity" class="text-danger"></span>
    </div>
<!--    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" id="priceInput" readonly />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
        -->


    <div class="form-group">
        <label>Total Price</label>
        <input type="text" id="totalPrice" value="@Model.TotalPrice.ToString("C")" class="form-control" readonly />
    </div>

    <div class="buttons">
        <button type="submit" class="btn btn-primary">Save Changes</button>
        <a asp-action="Index" class="btn btn-secondary">Cancel</a>
    </div>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const quantityInput = document.getElementById('quantityInput');
        const priceInput = document.getElementById('priceInput');
        const totalPriceInput = document.getElementById('totalPrice');
        const decrementBtn = document.getElementById('decrementBtn');
        const incrementBtn = document.getElementById('incrementBtn');

        // Initial values from the model
        let quantity = parseInt(quantityInput.value, 10);

        // Ensure we get a clean numeric value from the price input (removes any currency formatting)
        let price = parseFloat(priceInput.value.replace(/[^0-9.-]+/g, ""));

        // Function to update the total price immediately
        function updateTotalPrice() {
            const totalPrice = quantity * price;
            totalPriceInput.value = totalPrice.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
        }

        // Event listener for decrement button
        decrementBtn.addEventListener('click', function () {
            if (quantity > 1) {
                quantity--; // Decrement quantity
                quantityInput.value = quantity; // Update the input field
                updateTotalPrice(); // Recalculate total price
            }
        });

        // Event listener for increment button
        incrementBtn.addEventListener('click', function () {
            quantity++; // Increment quantity
            quantityInput.value = quantity; // Update the input field
            updateTotalPrice(); // Recalculate total price
        });

        // Initialize total price on page load
        updateTotalPrice();
    });
</script>

<style>
    .input-group {
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        width: 150px;
        margin: 0;
        padding: 0;
    }

        .input-group input {
            text-align: center;
            margin: 0;
        }

    .btn.btn-thirtiary {
        background-color: gray;
        color: white;
        height: 38px;
        width: 38px;
        padding: 0;
        margin: 0;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .form-control {
        text-align: left;
        height: 38px;
        width: 100%;
        margin: 0 5px;
    }

    .buttons {
        margin-top: 30px;
    }
</style>
